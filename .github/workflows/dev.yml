# Reference: https://github.com/neondatabase-labs/preview-branches-with-fly/blob/main/.github/workflows/deploy-preview.yml

name: Deploy to dev and test E2E
env:
  NEON_PROJECT_ID: ${{ vars.NEON_PROJECT_ID }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }} # You can generate a Fly API token in your account settings
  GH_TOKEN: ${{ secrets.GH_TOKEN }} # Required for commenting on pull requests for private repos
  DB_USERNAME: mcorg_owner
on:
  pull_request:
    branches: [ master ]
    paths:
      - webapp/**
jobs:
  deploy-dev:
    environment: dev
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    concurrency:
      group: pr-${{ github.event.number }}
    defaults:
      run:
        working-directory: ./webapp
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/dependencies.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache Flyway schemas
        uses: actions/cache@v4
        with:
          path: ./webapp/.flyway
          key: flyway-${{ runner.os }}-${{ hashFiles('./webapp/src/main/resources/db/migration/**') }}
          restore-keys: ${{ runner.os }}-flyway
      - name: Create Neon branch
        uses: neondatabase/create-branch-action@v6.0.1
        id: create-neon-branch
        with:
          project_id: morning-fog-11467472
          database: mcorg
          branch_name: dev/pr-${{ github.event.number }}
          role: ${{ env.DB_USERNAME }}
          api_key: ${{ secrets.NEON_API_KEY }}
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Run flyway migrations
        run: mvn flyway:migrate
        env:
          DB_URL: "jdbc:postgresql://${{ steps.create-neon-branch.outputs.db_host }}/mcorg?sslmode=require"
          DB_USER: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ steps.create-neon-branch.outputs.password }}
      - name: Deploy dev app to Fly
        uses: superfly/fly-pr-review-apps@1.5.0
        id: deploy
        with:
          name: mcorg-dev-${{ github.event.number }}
          path: ./webapp
          config: ./dev.fly.toml
          org: mc-org
          secrets: APP_HOST=mcorg-dev-${{ github.event.number }}.fly.dev DB_PASSWORD=${{ steps.create-neon-branch.outputs.password }} DB_URL=jdbc:postgresql://${{ steps.create-neon-branch.outputs.db_host_pooled }}/mcorg?sslmode=require DB_USER=${{ env.DB_USERNAME }} RSA_PUBLIC_KEY=${{ secrets.RSA_PUBLIC_KEY }} RSA_PRIVATE_KEY=${{ secrets.RSA_PRIVATE_KEY }}
      - uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GH_TOKEN_PR_COMMENTS}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Fly Preview URL :balloon: : ${{ steps.deploy.outputs.url }}\n Neon branch :elephant: : https://console.neon.tech/app/projects/${{ env.NEON_PROJECT_ID }}/branches/${{ steps.create-branch.outputs.branch_id }}'
            })
    outputs:
      dev_url: ${{ steps.deploy.outputs.url }}
  playwright-tests:
    name: "E2E Playwright Tests"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: deploy-dev
    defaults:
      run:
        working-directory: ./webapp/src/test/javascript
    steps:
      - uses: actions/checkout@v4
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ./webapp/src/test/javascript/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('./webapp/src/test/javascript/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
            **/node_modules/.cache/ms-playwright
            **/node_modules/playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('./webapp/src/test/javascript/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
        env:
          ENV: TEST
          CI: true
          FLY_DEV_URL: ${{ needs.deploy-dev.outputs.dev_url }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
